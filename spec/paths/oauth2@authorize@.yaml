get:
  tags:
    - Authorization
  summary: Authorize User
  description: >
    YellowAnt uses the OAuth 2.0 Authentication protocol which allows you to get
    a YellowAnt user’s information through a token issued to your application.


    To interact with YellowAnt users, you will first need to create an
    Application on the YellowAnt developers page.


    Go to https://<your-subdomain>.yellowant.com/developers/ and Register an
    application. Your application will need a valid Application name,
    invoke_name, API URL(where we will send all user commands) and redirect
    URL(where we will redirect the user after the user authenticates your
    application).


    # Defining Application Functions(Commands) and their Arguments


    After creating your application, you will have to declare the functions
    which the user will invoke as commands. All functions have a
    “user_invoke_name” which, along with the application invoke name, will point
    to your function.


    You will also need to declare the arguments to your functions so that
    YellowAnt can parse the necessary arguments and send to your application.


    The final command, with the function name and parsed arguments will be sent
    to your application, along with a verification token, which is automatically
    created when you register your application.


    Redirect your users to the following URLs


    `GET https://www.yellowant.com/api/oauth2/authorize/`
  parameters:
    - in: query
      name: client_id
      description: The client Id in your application developer page
      type: string
      required: true
    - in: query
      name: client_secret
      type: string
      description: The client secret from your application developer page
      required: true
    - in: query
      name: grant_type
      type: string
      description: Set value to ‘authorization_code’
      required: true
    - in: query
      name: redirect_url
      type: string
      description: The url to redirect the user after authentication
      required: true
    - in: query
      name: code
      type: string
      description: The code obtained from the GET parameter
      required: true
  responses:
    '200':
      description: User Authorized
      schema:
        $ref: '#/definitions/ClientDescription'
    '401':
      $ref: '#/responses/AccessForbidden'
