post:
  tags:
    - Integration
  summary: Create User Integration
  description: >
    YellowAnt uses the OAuth 2.0 Authentication protocol which allows you to get
    a YellowAnt userâ€™s information through a token issued to your application.
  x-code-samples:
    - lang: Python
      source: >
        yellowant_user =
        YellowAnt(access_token='sdfjbr32p89pdgDFF4p27cQd278p2DWcnp497f')

        profile = yellowant_user.create_user_integration()

        user_intergation_id = profile['user_application']

        user_intergation_invoke_name = profile['user_intergation_invoke_name']
    - lang: Javascript
      source: >
        module.exports.yellowantAPI = async function (req, res) {

        const data = JSON.parse(req.body.data);


        // check verification token from YA

        if (data.verification_token !== process.env.YA_VERIFICATION_TOKEN) {
          res.status(403).send("You are not authorized");
          return;
        }


        const yellowantIntegrationId = data.application;

        const commandName = data.function_name;

        const args = data.args;



        const message = await createMessage(yellowantIntegrationId, commandName,
        args);


        res.json(message.toJSON());

        }
  responses:
    '200':
      description: User Integration Created
    '201':
      description: User Integration Created
    '401':
      $ref: '#/responses/AccessForbidden'
    '404':
      $ref: '#/responses/NotFound'
    '422':
      description: Invalid data was sent
      schema:
        $ref: '#/definitions/InvalidError'
