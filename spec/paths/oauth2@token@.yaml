post:
  tags:
    - Authorization
  summary: Get User Token
  x-code-samples:
    - lang: Python
      source: |
        from yellowant import YellowAnt

        code = request.GET.get('code')
        CLIENT_ID = 'oLuOCDCScer5oi9GBFWrfewei7238fFWef7c0oGNb6g5Q'
        CLIENT_SECRET = '2m89fjXkTnh87d753x4fobFFwf@3netrcSQWSusqrtRu53s'

        y = YellowAnt(app_key=settings.CLIENT_ID, app_secret=CLIENT_SECRET,
                          access_token=None,
                          redirect_uri=REDIRECT_URL)
        access_token_dict = y.get_access_token(code)
        access_token = access_token_dict['access_token']

        user_yellowant_object = YellowAnt(access_token=access_token)
  description: >
    YellowAnt uses the OAuth 2.0 Authentication protocol which allows you to get
    a YellowAnt user’s information through a user token.
  parameters:
    - in: query
      name: client_id
      description: The client Id in your application developer page
      type: string
      required: true
    - in: query
      name: client_secret
      type: string
      description: The client secret from your application developer page
      required: true
    - in: query
      name: grant_type
      type: string
      description: Set value to ‘authorization_code’
      required: true
    - in: query
      name: redirect_url
      type: string
      description: The url to redirect the user after authentication
      required: true
    - in: query
      name: code
      type: string
      description: The code obtained from the GET parameter
      required: true
  responses:
    '200':
      description: User Authorized
      schema:
        $ref: '#/definitions/ClientDescription'
    '201':
      description: User Authorized
      schema:
        $ref: '#/definitions/ClientDescription'
    '401':
      $ref: '#/responses/AccessForbidden'
    '404':
      $ref: '#/responses/NotFound'
    '422':
      description: Invalid data was sent
      schema:
        $ref: '#/definitions/InvalidError'
